{"version":3,"sources":["logo.svg","components/Nav.js","components/Formulario.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","this","props","titulo","ntareas","Component","Formulario","state","persona","contenido","prioridad","cambio","bind","enviar","e","target","value","name","setState","preventDefault","onAdd","console","log","onSubmit","type","placeholder","onChange","priority","App","todo","agregar","index","window","confirm","filter","i","map","key","onClick","eliminar","length","src","logo","alt","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1683f860.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\n\nclass Nav extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<nav className=\"navbar navbar-dark bg-dark\">\n\t\t\t\t<h1 className=\"text-white\">\n\t\t\t\t\t{this.props.titulo}\n\t\t\t\t</h1>\n\t\t\t\t<span className=\"badge badge-pill badge-light mr-auto\">\n\t\t\t\t\t{this.props.ntareas}\n\t\t\t\t</span>\n\t\t\t</nav>\n\n\t\t);\n\t}\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\n\nclass Formulario extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttitulo: ' ',\n\t\t\tpersona: ' ',\n\t\t\tcontenido: ' ',\n\t\t\tprioridad: 'low'\n\t\t};\n\t\tthis.cambio = this.cambio.bind(this);\n\t\tthis.enviar = this.enviar.bind(this);\n\t}\n\tcambio(e) {\n\t\tconst {value, name} = e.target;\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t})\n\t}\n\tenviar(e){\n\t\te.preventDefault();\n\t\tthis.props.onAdd(this.state);\n\t\tconsole.log('envio');\n\t}\n\trender(){\t\n\t\treturn(\n\t\t\t<div className=\"card\">\n\t\t\t\t<form className=\"card-body\" onSubmit={this.enviar}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input className=\"form-control\" type=\"text\" name=\"titulo\" placeholder=\"titulo\" onChange= {this.cambio} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input className=\"form-control\" type=\"text\" name=\"persona\" placeholder=\"persona\"  onChange= {this.cambio} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input className=\"form-control\" type=\"text\" name=\"contenido\" placeholder=\"contenido\" onChange= {this.cambio}  />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\n\t\t\t\t\t\t<select\n\t\t\t\t\t\tname=\"priority\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={this.state.priority}\n\t\t\t\t\t\tonChange= {this.cambio} \n\t\t\t\t\t\t>\n\t\t\t\t\t\t<option>low</option>\n\t\t\t\t\t\t<option>medium</option>\n\t\t\t\t\t\t<option>high</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\tSave\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default Formulario;\n","import React,{ Component  } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Nav from './components/Nav';\nimport { todo } from './todo';\nimport Formulario from './components/Formulario'\n\nclass App extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state= {\n\t\t\ttodo\n\n\t\t};\n\t\tthis.agregar = this.agregar.bind(this);\n\t}\n\tagregar(todo){\n\t\tthis.setState({\n\t\t\ttodo: [...this.state.todo, todo]\n\t\t})\n\t}\n\n\teliminar(index){\n\t\tif(window.confirm('estas seguro de eliminar?')){\n\t\tthis.setState({\n\t\t\ttodo: this.state.todo.filter((e,i)=>{\n\t\t\t\treturn i !== index\n\t\t\t}) \n\t\t})\n\t}\n\t}\n\trender(){\n\t\tconst todo = this.state.todo.map((todo, i)=>{\n\t\t\treturn(\n\t\t\t\t<div className=\"col-md-4\" key={i}>\n\t\t\t\t\t<div className=\"card mt-4\">\n\t\t\t\t\t\t<div className=\"card-header\">\n\t\t\t\t\t\t\t<h3>{todo.titulo}</h3>\n\t\t\t\t\t\t\t<span className=\"badge badge-pill badge-danger ml-2\">\n\t\t\t\t\t\t\t\t{todo.prioridad}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t<p>{todo.contenido}</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<mark>{todo.persona}</mark>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"card footer\">\n\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick= {this.eliminar.bind(this, i)} >\n\t\t\t\t\t\t\t\tEliminar\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t);\n\n\t\t})\n\t\treturn(\n\t\t\t<div className=\"App\">\n\t\t\t\t<Nav \n\t\t\t\ttitulo =\"Task\"\n\t\t\t\tntareas = {this.state.todo.length}\t\n\t\t\t\t/>\n\t\t\t\t\t<div className=\"container\">\t\t\t\t\n\t\t\t\t\t\t<div className=\"row mt-4\">\n\t\t\t\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t\t\t\t\t<Formulario onAdd= {this.agregar}/>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-md-9\">\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t{ todo }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t);\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}